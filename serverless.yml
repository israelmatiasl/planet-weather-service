org: devploy

service: star-weather-service
frameworkVersion: '4.14.3'

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-2
  stage: dev
  environment:
    JWT_SECRET: c9MpJqOIFHdmBPjb26OPbqsOiqtHboPq
    STAGE: ${sls:stage}
    COGNITO_USER_POOL_NAME: ${self:service}-user-pool-${opt:stage, self:provider.stage}
    COGNITO_USER_POOL_CLIENT_NAME: ${self:service}-user-pool-client-${opt:stage, self:provider.stage}
    DYNAMODB_TABLE: ${self:service}-${opt:stage, self:provider.stage}
    DYNAMODB_USER_TABLE: ${self:service}-user-${opt:stage, self:provider.stage}
    COGNITO_USER_POOL_ID: !Ref CognitoUserPool
    COGNITO_USER_POOL_CLIENT_ID: !Ref CognitoUserPoolClient

  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:PutItem
            - dynamodb:GetItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
            - dynamodb:Scan
            - dynamodb:Query
          Resource:
            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:provider.environment.DYNAMODB_TABLE}
            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:provider.environment.DYNAMODB_TABLE}/index/autogenerated-index
            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:provider.environment.DYNAMODB_USER_TABLE}
            - arn:aws:dynamodb:${aws:region}:${aws:accountId}:table/${self:provider.environment.DYNAMODB_USER_TABLE}/index/email-index
        - Effect: Allow
          Action:
            - cognito-idp:AdminConfirmSignUp
          Resource:
            - !Sub arn:aws:cognito-idp:${aws:region}:${aws:accountId}:userpool/${CognitoUserPool}

plugins:
  - serverless-offline

functions:
  main:
    handler: dist/handler.handler
    timeout: 10
    memorySize: 128
    events:
      - http:
          method: ANY
          path: /
      - http:
          method: ANY
          path: '{proxy+}'

resources:
  Resources:
    PlanetWeatherTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_TABLE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: autogenerated
            AttributeType: N 
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: autogenerated-index
            KeySchema:
              - AttributeName: autogenerated
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST
    UsersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:provider.environment.DYNAMODB_USER_TABLE}
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: email-index
            KeySchema:
              - AttributeName: email
                KeyType: HASH
            Projection:
              ProjectionType: ALL
        BillingMode: PAY_PER_REQUEST
    CognitoUserPool:
      Type: AWS::Cognito::UserPool
      Properties:
        UserPoolName: ${self:provider.environment.COGNITO_USER_POOL_NAME}
        Schema:
          - Name: email
            AttributeDataType: String
            Required: true
            Mutable: true
          - Name: name
            AttributeDataType: String
            Required: false
            Mutable: true
        AutoVerifiedAttributes:
          - email
        UsernameAttributes:
          - email
        Policies:
          PasswordPolicy:
            MinimumLength: 8
            RequireLowercase: true
            RequireUppercase: true
            RequireNumbers: true
            RequireSymbols: true
    CognitoUserPoolClient:
      Type: AWS::Cognito::UserPoolClient
      Properties:
        ClientName: ${self:provider.environment.COGNITO_USER_POOL_CLIENT_NAME}
        UserPoolId: !Ref CognitoUserPool
        GenerateSecret: false
        ExplicitAuthFlows:
          - ALLOW_USER_PASSWORD_AUTH
          - ALLOW_USER_SRP_AUTH
          - ALLOW_REFRESH_TOKEN_AUTH
    CognitoUserPoolIdParameter:
      Type: AWS::SSM::Parameter
      Properties:
        Name: /${self:service}/${self:provider.stage}/cognito/user-pool-id
        Type: String
        Value: !Ref CognitoUserPool
    CognitoUserPoolClientIdParameter:
      Type: AWS::SSM::Parameter
      Properties:
        Name: /${self:service}/${self:provider.stage}/cognito/user-pool-client-id
        Type: String
        Value: !Ref CognitoUserPoolClient

custom:
  optimize:
    external: ['swagger-ui-dist']
  esbuild:
    tsconfig: './tsconfig.json'
    bundle: true
    minify: true
    sourcemap: true
    exclude: ['aws-sdk']
    target: node20
    platform: node
    concurrency: 10